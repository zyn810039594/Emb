#include "stm32f10x.h"
#include "bsp_GeneralTim.h"
#include "bsp_usart.h"
#include "bsp_SysTick.h"
#include "bsp_Timbase.h"
#include "bsp_iwdg.h"

vu8 LineFlag=2;

extern u8 PrintFlag;
vu8 HighMes=0;

vu8 PT=0;
vu8 WAP1=0;
vu8 WAP2=0;
vu8 WAC1=0;
vu8 WAC2=0;
vu8 HT1=0;
vu8 HT2=0;
vu8 HT3=0;
vu8 HT4=0;
vu16 DE=0;
vu8 CT=0;
vu16 YA=0;
vu16 PI=0;
vu16 RO=0;
vu16 DP=0;
vu16 WT=0;
u8 ModeFlag=1;//Mode 0:Stop Mode 1:Normal(Round) Mode 2:Strict


float dDS=0;

u16 dDX1=0;
u16 dDX2=0;

int DXNum=100;
int DZNum=100;

extern u8 Rev1[10];
extern vu8 MXN[3];
extern vu8 MXF;
extern vu8 MYN[3];
extern vu8 MYF;
extern vu8 MZN[3];
extern vu8 MZF;
extern vu8 HAN[3];
extern vu8 HAF;
extern vu8 YAN[3];
extern vu8 YAF;
extern vu8 WAN[3];
extern vu8 WAF;
extern vu8 GAN[3];
extern vu8 GAF;
extern vu8 BAN[3];
extern vu8 BAF;
extern vu8 HBN[3];
extern vu8 HBF;
extern vu8 YBN[3];
extern vu8 YBF;
extern vu8 WBN[3];
extern vu8 WBF;
extern vu8 GBN[3];
extern vu8 GBF;
extern vu8 BBN[3];
extern vu8 BBF;
extern vu8 LTN[3];
extern vu8 LTF;
extern vu8 YTN[3];
extern vu8 YTF;
extern vu8 LFN[3];
extern vu8 LFF;
extern vu8 ZBN[3];
extern vu8 ZBF;
extern vu8 KZN[3];
extern vu8 KZF;
extern vu8 KPN[3];
extern vu8 KPF;
extern vu8 SCN[5];
extern vu8 SCF;
extern vu8 RCF;

extern u8 AFlag,BFlag,CFlag,DFlag;
extern u8 XPoint,YPoint;

int main(void)
{


    SysTick_Init();
    SysTick_Delay_Ms(6000);
    //两路PWM初始化
    GENERAL_TIM_Init();
    USART_Config();
    BASIC_TIM_Init();
    IWDG_Config(IWDG_Prescaler_64,625);
    while (1)
    {
        if(LineFlag==1)
        {
            if(RCF==1)
            {
							RCF=0;
                if(MXF==1&&MYF==1)
                {
                    MXF=0;
                    MYF=0;
                    XPoint=(MXN[0]-'0')*100+(MXN[1]-'0')*10+(MXN[2]-'0');
                    YPoint=(MYN[0]-'0')*100+(MYN[1]-'0')*10+(MYN[2]-'0');
                    AFlag=(XPoint>YPoint);
                    BFlag=((XPoint+YPoint)>200);
                    CFlag=(XPoint>100);
                    DFlag=(YPoint>100);
                    if(ModeFlag==1)
                    {
                        if(BFlag==1)
                        {
                            if(CFlag==0)
                            {
                                PrintFlag=4;
                                printf("$MD003%%");
                            }
                            else if(DFlag==0)
                            {
                                PrintFlag=4;
                                printf("$MD004%%");
                            }
                            else
                            {
                                if(AFlag==1)
                                {
                                    PrintFlag=4;
                                    printf("$MD001%%");
                                }
                                else
                                {
                                    PrintFlag=4;
                                    printf("$MD002%%");
                                }
                            }
                        }
                        else
                        {
                            if(CFlag==1)
                            {
                                PrintFlag=4;
                                printf("$MD003%%");
                            }
                            else if(DFlag==1)
                            {
                                PrintFlag=4;
                                printf("$MD004%%");
                            }
                            else
                            {
                                if(AFlag==0)
                                {
                                    PrintFlag=4;
                                    printf("$MD001%%");
                                }
                                else
                                {
                                    PrintFlag=4;
                                    printf("$MD002%%");
                                }
                            }
                        }
                        PrintFlag=4;
                        printf("$MX%03d%% ",XPoint);
                        printf("$MY%03d%%",YPoint);
                    }
                    else if(ModeFlag==2)
                    {
                        PrintFlag=4;
                        printf("$MD005%%");
                        printf("$MX%03d%% ",XPoint);
                        printf("$MY%03d%%",YPoint);
                    }
                }
                if(MZF==1)
                {
                    MZF=0;
                    if(ModeFlag==1)
                    {
                        PrintFlag=4;
                        printf("$MZ%c%c%c%%",MZN[0],MZN[1],MZN[2]);
                    }
                }
                if(HAF==1)
                {
                    HAF=0;
                    PrintFlag=4;
                    printf("$HA%c%c%c%%",HAN[0],HAN[1],HAN[2]);
                }
                if(YAF==1)
                {
                    YAF=0;
                    PrintFlag=4;
                    printf("$YA%c%c%c%%",YAN[0],YAN[1],YAN[2]);
                }
                if(WAF==1)
                {
                    WAF=0;
                    PrintFlag=4;
                    printf("$WA%c%c%c%%",WAN[0],WAN[1],WAN[2]);
                }
                if(GAF==1)
                {
                    GAF=0;
                    PrintFlag=4;
                    printf("$GA%c%c%c%%",GAN[0],GAN[1],GAN[2]);
                }
                if(BAF==1)
                {
                    BAF=0;
                    PrintFlag=4;
                    printf("$BA%c%c%c%%",BAN[0],BAN[1],BAN[2]);
                }
                if(HBF==1)
                {
                    HBF=0;
                    PrintFlag=4;
                    printf("$HB%c%c%c%%",HBN[0],HBN[1],HBN[2]);
                }
                if(YBF==1)
                {
                    YBF=0;
                    PrintFlag=4;
                    printf("$YB%c%c%c%%",YBN[0],YBN[1],YBN[2]);
                }
                if(WBF==1)
                {
                    WBF=0;
                    PrintFlag=4;
                    printf("$WB%c%c%c%%",WBN[0],WBN[1],WBN[2]);
                }
                if(GBF==1)
                {
                    GBF=0;
                    PrintFlag=4;
                    printf("$GB%c%c%c%%",GBN[0],GBN[1],GBN[2]);
                }
                if(BBF==1)
                {
                    BBF=0;
                    PrintFlag=4;
                    printf("$BB%c%c%c%%",BBN[0],BBN[1],BBN[2]);
                }
                if(YTF==1)
                {
                    YTF=0;
                    PrintFlag=4;
                    printf("$YT%c%c%c%%",YTN[0],YTN[1],YTN[2]);
                }
                if(ZBF==1)
                {
                    ZBF=0;
                    PrintFlag=4;
                    printf("$ZB%c%c%c%%",ZBN[0],ZBN[1],ZBN[2]);
                }
                if(LFF==1)
                {
                    LFF=0;
                    PrintFlag=4;
                    printf("$LF%c%c%c%%",LFN[0],LFN[1],LFN[2]);
                }
                if(LTF==1)
                {
                    LTF=0;
                    PrintFlag=4;
                    printf("$LT%c%c%c%%",LTN[0],LTN[1],LTN[2]);
                }
                if(SCF==1)
                {
                    SCF=0;
                    PrintFlag=4;
                    printf("$%c%c%c%c%c%%",SCN[0],SCN[1],SCN[2],SCN[3],SCN[4]);
                }
                if(KZF==1)
                {
                    KZF=0;
                    DZNum=(KZN[0]-'0')*100+(KZN[1]-'0')*10+(KZN[2]-'0');
                    dDS=DP;
                }
                if(KPF==1)
                {
                    KPF=0;
                    DXNum=(KPN[0]-'0')*100+(KPN[1]-'0')*10+(KPN[2]-'0');
                    dDX1=DE;
                    dDX2=YA;
                }
            }
        }

//		if(HighMes==1)
//		{
////			if(Rev1[1]=='A'&&Rev1[2]=='Y')
////			{
////				PrintFlag=4;
////				printf("$AY");
////				Usart_SendByte(UART4,Rev1[3]);
////				Usart_SendByte(UART4,Rev1[4]);
////				Usart_SendByte(UART4,Rev1[5]);
////				Usart_SendByte(UART4,'%');
////			}
////			else if(Rev1[1]=='B'&&Rev1[2]=='X')
////			{
////				PrintFlag=4;
////				printf("$BX");
////				Usart_SendByte(UART4,Rev1[3]);
////				Usart_SendByte(UART4,Rev1[4]);
////				Usart_SendByte(UART4,Rev1[5]);
////				Usart_SendByte(UART4,'%');
////			}
////			else if(Rev1[1]=='C'&&Rev1[2]=='Z')
////			{
////				PrintFlag=4;
////				printf("$CZ");
////				Usart_SendByte(UART4,Rev1[3]);
////				Usart_SendByte(UART4,Rev1[4]);
////				Usart_SendByte(UART4,Rev1[5]);
////				Usart_SendByte(UART4,'%');
////			}
//			if(Rev1[1]=='M'&&Rev1[2]=='D')
//			{
//				ModeFlag=(Rev1[5]-'0');
//			}
//			else if(Rev1[1]=='M'&&Rev1[2]=='X')
//			{
////				PrintFlag=4;
////				printf("$MX");
////				Usart_SendByte(UART4,Rev1[3]);
////				Usart_SendByte(UART4,Rev1[4]);
////				Usart_SendByte(UART4,Rev1[5]);
////				Usart_SendByte(UART4,'%');
//				XPoint=(Rev1[3]-'0')*100+(Rev1[4]-'0')*10+(Rev1[5]-'0');
//				XFinish=1;
//			}
//			else if(Rev1[1]=='M'&&Rev1[2]=='Y')
//			{
////				PrintFlag=4;
////				printf("$MY");
////				Usart_SendByte(UART4,Rev1[3]);
////				Usart_SendByte(UART4,Rev1[4]);
////				Usart_SendByte(UART4,Rev1[5]);
////				Usart_SendByte(UART4,'%');
//				YPoint=(Rev1[3]-'0')*100+(Rev1[4]-'0')*10+(Rev1[5]-'0');
//				if(XFinish==1)
//				{
//					XFinish=0;
//					AFlag=(XPoint>YPoint);
//					BFlag=((XPoint+YPoint)>200);
//					CFlag=(XPoint>100);
//					DFlag=(YPoint>100);
//					if(ModeFlag==1)
//					{
//						if(BFlag==1)
//						{
//							if(CFlag==0)
//							{
//								PrintFlag=4;
//								printf("$MD003%%");
//							}
//							else if(DFlag==0)
//							{
//								PrintFlag=4;
//								printf("$MD004%%");
//							}
//							else
//							{
//								if(AFlag==1)
//								{
//									PrintFlag=4;
//									printf("$MD001%%");
//								}
//								else
//								{
//									PrintFlag=4;
//									printf("$MD002%%");
//								}
//							}
//						}
//						else
//						{
//							if(CFlag==1)
//							{
//								PrintFlag=4;
//								printf("$MD003%%");
//							}
//							else if(DFlag==1)
//							{
//								PrintFlag=4;
//								printf("$MD004%%");
//							}
//							else
//							{
//								if(AFlag==0)
//								{
//									PrintFlag=4;
//									printf("$MD001%%");
//								}
//								else
//								{
//									PrintFlag=4;
//									printf("$MD002%%");
//								}
//							}
//						}
//						PrintFlag=4;
//						printf("$MX%03d%% ",XPoint);
//						printf("$MY%03d%%",YPoint);
//					}
//					else if(ModeFlag==2)
//					{
//						PrintFlag=4;
//						printf("$MD005%%");
//						printf("$MX%03d%% ",XPoint);
//						printf("$MY%03d%%",YPoint);
//					}
//				}
//
//			}
//			else if(Rev1[1]=='M'&&Rev1[2]=='Z')
//			{
//				if(ModeFlag!=0)
//				{
//					PrintFlag=4;
//					printf("$MZ");
//					Usart_SendByte(UART4,Rev1[3]);
//					Usart_SendByte(UART4,Rev1[4]);
//					Usart_SendByte(UART4,Rev1[5]);
//					Usart_SendByte(UART4,'%');
//				}
//			}

//			else if(Rev1[1]=='Y'&&Rev1[2]=='T')
//			{
//				PrintFlag=4;
//				printf("$YT");
//				Usart_SendByte(UART4,Rev1[3]);
//				Usart_SendByte(UART4,Rev1[4]);
//				Usart_SendByte(UART4,Rev1[5]);
//				Usart_SendByte(UART4,'%');
//			}
////			else if(Rev1[1]=='S'&&Rev1[2]=='A')
////			{
////				PrintFlag=4;
////				printf("$SA");
////				Usart_SendByte(UART4,Rev1[3]);
////				Usart_SendByte(UART4,Rev1[4]);
////				Usart_SendByte(UART4,Rev1[5]);
////				Usart_SendByte(UART4,'%');
////
////			}
////			else if(Rev1[1]=='S'&&Rev1[2]=='B')
////			{
////				PrintFlag=4;
////				printf("$SB");
////				Usart_SendByte(UART4,Rev1[3]);
////				Usart_SendByte(UART4,Rev1[4]);
////				Usart_SendByte(UART4,Rev1[5]);
////				Usart_SendByte(UART4,'%');
////			}
//			else if(Rev1[1]=='Z'&&Rev1[2]=='B')
//			{
//				PrintFlag=4;
//				printf("$ZB");
//				Usart_SendByte(UART4,Rev1[3]);
//				Usart_SendByte(UART4,Rev1[4]);
//				Usart_SendByte(UART4,Rev1[5]);
//				Usart_SendByte(UART4,'%');
//			}
//			else if(Rev1[1]=='L'&&Rev1[2]=='T')
//			{
//				PrintFlag=4;
//				printf("$LT");
//				Usart_SendByte(UART4,Rev1[3]);
//				Usart_SendByte(UART4,Rev1[4]);
//				Usart_SendByte(UART4,Rev1[5]);
//				Usart_SendByte(UART4,'%');
//			}
////			else if(Rev1[1]=='C'&&Rev1[2]=='T')
////			{
////				PrintFlag=4;
////				printf("$CT");
////				Usart_SendByte(UART4,Rev1[3]);
////				Usart_SendByte(UART4,Rev1[4]);
////				Usart_SendByte(UART4,Rev1[5]);
////				Usart_SendByte(UART4,'%');
////			}
//			else if(Rev1[1]=='T'&&Rev1[2]=='G')
//			{
//				TIM3->CCR1=500+(47.5*(Rev1[3]*100+Rev1[4]*10+Rev1[5]));
//				TIM3->CCR2=500+(47.5*(Rev1[3]*100+Rev1[4]*10+Rev1[5]));
//			}
//			else if(Rev1[1]=='K'&&Rev1[2]=='Z')
//
//			{
//				DZNum=(Rev1[3]-'0')*100+(Rev1[4]-'0')*10+(Rev1[5]-'0');
//				dDS=DP;
//			}
//			else if(Rev1[1]=='K'&&Rev1[2]=='D')
//			{
//				DXNum=(Rev1[3]-'0')*100+(Rev1[4]-'0')*10+(Rev1[5]-'0');
//				dDX1=DE;
//				dDX2=YA;
//			}
//			else if(Rev1[1]=='H'&&Rev1[2]=='A')
//			{
//				PrintFlag=4;
//				printf("$03");
//				Usart_SendByte(UART4,Rev1[3]);
//				Usart_SendByte(UART4,Rev1[4]);
//				Usart_SendByte(UART4,Rev1[5]);
//				Usart_SendByte(UART4,'%');
//			}
//			else if(Rev1[1]=='Y'&&Rev1[2]=='A')
//			{
//				PrintFlag=4;
//				printf("$04");
//				Usart_SendByte(UART4,Rev1[3]);
//				Usart_SendByte(UART4,Rev1[4]);
//				Usart_SendByte(UART4,Rev1[5]);
//				Usart_SendByte(UART4,'%');
//			}
//			else if(Rev1[1]=='W'&&Rev1[2]=='A')
//			{
//				PrintFlag=4;
//				printf("$05");
//				Usart_SendByte(UART4,Rev1[3]);
//				Usart_SendByte(UART4,Rev1[4]);
//				Usart_SendByte(UART4,Rev1[5]);
//				Usart_SendByte(UART4,'%');
//			}
//			else if(Rev1[1]=='G'&&Rev1[2]=='A')
//			{
//				PrintFlag=4;
//				printf("$06");
//				Usart_SendByte(UART4,Rev1[3]);
//				Usart_SendByte(UART4,Rev1[4]);
//				Usart_SendByte(UART4,Rev1[5]);
//				Usart_SendByte(UART4,'%');
//			}
//			else if(Rev1[1]=='B'&&Rev1[2]=='A')
//			{
//				PrintFlag=4;
//				printf("$BA");
//				Usart_SendByte(UART4,Rev1[3]);
//				Usart_SendByte(UART4,Rev1[4]);
//				Usart_SendByte(UART4,Rev1[5]);
//				Usart_SendByte(UART4,'%');
//			}
//			else if(Rev1[1]=='H'&&Rev1[2]=='B')
//			{
//				PrintFlag=4;
//				printf("$07");
//				Usart_SendByte(UART4,Rev1[3]);
//				Usart_SendByte(UART4,Rev1[4]);
//				Usart_SendByte(UART4,Rev1[5]);
//				Usart_SendByte(UART4,'%');
//			}
//			else if(Rev1[1]=='Y'&&Rev1[2]=='B')
//			{
//				PrintFlag=4;
//				printf("$08");
//				Usart_SendByte(UART4,Rev1[3]);
//				Usart_SendByte(UART4,Rev1[4]);
//				Usart_SendByte(UART4,Rev1[5]);
//				Usart_SendByte(UART4,'%');
//			}
//			else if(Rev1[1]=='W'&&Rev1[2]=='B')
//			{
//				PrintFlag=4;
//				printf("$09");
//				Usart_SendByte(UART4,Rev1[3]);
//				Usart_SendByte(UART4,Rev1[4]);
//				Usart_SendByte(UART4,Rev1[5]);
//				Usart_SendByte(UART4,'%');
//			}
//			else if(Rev1[1]=='G'&&Rev1[2]=='B')
//			{
//				PrintFlag=4;
//				printf("$10");
//				Usart_SendByte(UART4,Rev1[3]);
//				Usart_SendByte(UART4,Rev1[4]);
//				Usart_SendByte(UART4,Rev1[5]);
//				Usart_SendByte(UART4,'%');
//			}
//			else if(Rev1[1]=='B'&&Rev1[2]=='B')
//			{
//				PrintFlag=4;
//				printf("$BB");
//				Usart_SendByte(UART4,Rev1[3]);
//				Usart_SendByte(UART4,Rev1[4]);
//				Usart_SendByte(UART4,Rev1[5]);
//				Usart_SendByte(UART4,'%');
//			}
//			else if(Rev1[1]=='L'&&Rev1[2]=='F')
//			{
//				PrintFlag=4;
//				printf("$LF");
//				Usart_SendByte(UART4,Rev1[3]);
//				Usart_SendByte(UART4,Rev1[4]);
//				Usart_SendByte(UART4,Rev1[5]);
//				Usart_SendByte(UART4,'%');
//			}
//			else if((Rev1[1]=='0'||Rev1[1]=='1')&&(Rev1[2]<='9'||Rev1[2]>='0'))
//      {
//				Usart_SendByte(UART4,Rev1[0]);
//				Usart_SendByte(UART4,Rev1[1]);
//        Usart_SendByte(UART4,Rev1[2]);
//				Usart_SendByte(UART4,Rev1[3]);
//				Usart_SendByte(UART4,Rev1[4]);
//				Usart_SendByte(UART4,Rev1[5]);
//				Usart_SendByte(UART4,'%');
//      }
//			HighMes=0;
//		}

    }

}
